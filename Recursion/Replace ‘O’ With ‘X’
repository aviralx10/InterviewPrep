#include<vector>
void DFS(char** a,int i,int j,int n,int m){
    if(i<0 || j<0 || i>=n || j>=m){
        return ;
    }
    if(a[i][j]!='-'){
        return;
    }
    a[i][j]='O';
    DFS(a,i+1,j,n,m);
    DFS(a,i,j+1,n,m);
    DFS(a,i-1,j,n,m);
    DFS(a,i,j-1,n,m);
}
void replaceOWithX(char** arr, int n, int  m)
{
    //replace O with X
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(arr[i][j]=='O'){
                arr[i][j]='-';
            }
        }
    }
    //replace boundary elements with O
    //top row
    for(int j=0;j<m;j++){
        if(arr[0][j]=='-'){
            DFS(arr,0,j,n,m);
        }
    }
    //bottom row
    for(int j=0;j<m;j++){
        if(arr[n-1][j]=='-'){
            DFS(arr,n-1,j,n,m);
        }
    }
    //first column
    for(int i=0;i<n;i++){
        if(arr[i][0]=='-'){
            DFS(arr,i,0,n,m);
        }
    }
    //last column
    for(int i=0;i<n;i++){
        if(arr[i][m-1]=='-'){
            DFS(arr,i,m-1,n,m);
        }
    }
    //replace other '-' with X
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(arr[i][j]=='-'){
                arr[i][j]='X';
            }
        }
    }
}
