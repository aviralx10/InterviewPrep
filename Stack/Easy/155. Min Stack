class MinStack {
public:
    /** initialize your data structure here. */
    stack<pair<int,int>> s;               //first element of the pair is the normal stack, second is the minimum most value
    MinStack() {
        
    }
    void push(int x) {
      if(s.empty()){
          s.push({x,x});                    //if stack is empty, then a new value is inserted in stack which is also its min
      }
       else if(s.top().second>=x){
           s.push({x,x});   //if inserted value is less than the minimum value, change it
       }else{
           s.push({x,s.top().second});  //else don't alter it  
       }
    }
    
    void pop() {
          s.pop();
    }
    
    int top() {
        return s.top().first;
    }
    
    int getMin() {
        return s.top().second;
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(x);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
