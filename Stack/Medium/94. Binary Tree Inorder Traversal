/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
//RECURSIVE SOLUTION
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> res;
        inorder(res,root);
        return res;
    }
    void inorder(vector<int>& res,TreeNode* root){
        if(root==NULL){return ;}
        if(root){
            if(root->left) inorder(res,root->left);
            res.push_back(root->val);
            if(root->right) inorder(res,root->right);
        }
    }
};

//ITERATIVE SOLUTION
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> res;
        stack<TreeNode*> s;
        while(root || !s.empty()){
            if(root){
                s.push(root);
                root=root->left;
            }else{
                root=s.top();
                s.pop();
                res.push_back(root->val);
                root=root->right;
            }
        }
        return res;
    }
        
};
