bool search(vector<vector<char> >& board,int i,int j,int count,string word){
    if(count==word.length()){return true;}
    
    if (i < 0 || i >= board.size() || j < 0 || j >= board[i].size() ||
        board[i][j] != word[count]){ return false;}               //if out of limits or not same as word[count] backtrack to original position
    char temp=board[i][j];
    board[i][j]='#';                            //# in case repetition of cases do not occur
    
    //if adjacent letters match then return true
    if(search(board,i+1 ,j,count+1,word)||              //bottom                                
        search(board,i-1,j,count+1,word)||              //top
        search(board,i,j-1,count+1,word)||              //left
        search(board,i,j+1,count+1,word)){              //right
            return true;
    }
        
    board[i][j]=temp;                         
    return false;
}
bool WordSearch(vector<vector<char> >& board, string word) {
    for(int i=0;i<board.size();i++){
        for(int j=0;j<board[i].size();j++){
            if(board[i][j]==word[0] && search(board,i,j,0,word)){           //when the first word matches , do DFS and search the adjacent cells 
                return true;
            }
        }
    }
    return false;
    
}
