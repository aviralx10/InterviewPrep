// O(n3) approach
int res(int A[],int n,int x){
    int l=0;
    for(int i=1;i<=n;i++){          //for length
	        for(int j=0;j<=n-i;j++){      //for selecting different indices of array
	            int sum=0;
	            for(int k=j;k<=(j+i-1);k++){    //counting sum loop for a particular range
	                sum+=A[k];
	                if(sum>x){
	                    return i;
	                }
	            }
	        }
	 }
	 return 0;
}
//O(n2) approach
int res(int A[],int n,int x){
    int len=n+1;
    for(int i=0;i<n;i++){
        int sum=A[i];
        if(sum>x){return 1;}
        for(int j=i+1;j<n;j++){
            sum+=A[j];
            if(sum>x && j-i+1<len){
                len=j-i+1;
            }
        }
    }
    return len;
}
//O(n) approach. //sliding window concept
int res(int A[],int n,int x){
    int len=n+1;
    int start=0;
    int end=0;
    int sum=0;
    while(end<n){
        while(end<n && sum<=x){
            sum+=A[end++];
        }
        while(sum>x && start<n){
            if(end-start<len){
                len=end-start;
            }
            sum-=A[start++];
        }
    }
    return len;
}
