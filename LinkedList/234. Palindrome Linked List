/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
 //O(n2) complexity
int count(ListNode *a){
    int x=0;
    ListNode* y=a;
    while(y){
        x++;
        y=y->next;
    }
    return x;
}
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        if(head==NULL){
            return true;
        }
        if(head->next==NULL){
            return true;
        }
        if(head->next->next==NULL){
            if(head->next->val==head->val){
                return true;
            }
            return false;
        }
        int k=count(head);
        ListNode *p=head;
        
        for(int i=0;i<(k/2);i++){
            ListNode *q=p;
            for(int j=0;j<(k-(2*i+1));j++){
                q=q->next;
            }
            if(q->val!=p->val){
                return false;
            }
            p=p->next;
        }
        return true;
    }
};
