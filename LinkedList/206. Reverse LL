/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode* p=head;             //the foremost pointer
        ListNode* q=NULL;             //the resultant pointer
        ListNode* r=NULL;             //the last trailing pointer to which our resultant pointer would point to.
        while(p){
            r=q;
            q=p;
            p=p->next;
            q->next=r;
        }
        head=q;
        return head;
    }
};

//RECURSION
Node* head;         //global variable
Node *reverse(Node* node){
    if(node==NULL){
        return NULL;
    }
    if(node->next==NULL){
        head=node;
        return node;
    }
    Node *x=reverse(node->next);
    x->next=node;
    node->next=NULL;
    return x;

}
